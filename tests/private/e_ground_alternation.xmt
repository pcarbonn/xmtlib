(set-option :backend none)

(declare-fun p (Int) Bool)
(declare-fun q (Int Int) Bool)
(assert (forall ((x Int))
            (=> (p x)
                (exists ((y Int)) (q x y)))))

(declare-datatype Color ((red) (blue)))
(declare-fun color (Int Color) Bool)
(assert (exists ((x Int))
                (forall ((y Color)) (color x y))))
(x-interpret-pred p (x-set (1)))
(x-interpret-pred q (x-set (2 2)))
(x-interpret-pred color (x-set (2 red) (2 blue)))

(x-ground :debug :sql)
(x-debug solver generators)
(x-debug db tables)
(x-debug db _xmt_interp_row_T)
------- RESULTS ------------------
(declare-fun p (Int) Bool)
(declare-fun q (Int Int) Bool)
(declare-datatype Color ((red) (blue)))
(declare-fun color (Int Color) Bool)
; ==== Query =============================
;-- Agg (0)
;SELECT G as G
; FROM (-- Join(7)
;       SELECT _xmt_interp_p_TU_1.a_1 AS x,
;              Agg_5_UF.G AS G
;         FROM (-- Agg (15)
;               SELECT x,
;                      or_aggregate(G) as G
;                FROM (SELECT _xmt_interp_q_TU_4.G AS x, NULL AS y, "false" AS G FROM _xmt_interp_q_TU AS _xmt_interp_q_TU_4 
;                      UNION ALL
;                      -- Join(22)
;                      SELECT _xmt_interp_q_TU_4.a_1 AS x,
;                             _xmt_interp_q_TU_4.a_2 AS y,
;                             "true" AS G
;                        FROM _xmt_interp_q_TU AS _xmt_interp_q_TU_4)
;                GROUP BY x
;               ) AS Agg_5_UF
;         JOIN _xmt_interp_p_TU AS _xmt_interp_p_TU_1
;        WHERE  Agg_5_UF.x = _xmt_interp_p_TU_1.a_1)
; ==== Query =============================
;-- Agg (0)
;SELECT "(exists ((x Int)) " || or_aggregate(G) || ")" as G
; FROM (SELECT NULL AS x, "false" AS G 
;       UNION ALL
;       -- Agg (7)
;       SELECT x,
;              and_aggregate(G) as G
;        FROM (-- Join(14)
;              SELECT "x" AS x,
;                     _xmt_sort_color_8.G AS y,
;                     apply("color", "x", _xmt_sort_color_8.G) AS G
;                FROM _xmt_sort_color AS _xmt_sort_color_8)
;        GROUP BY x)(assert (exists ((x Int)) (and (color x blue) (color x red))))
(assert (forall ((x0 Int) (x1 Color)) (= (color x0 x1) (or 
  (and (= x0 2) (= x1 red))
  (and (= x0 2) (= x1 blue))
))))

; ==== Query =============================
;SELECT "true"
; ==== Query =============================
;SELECT "true"
Generators:
=== (forall ((x Int)) (or (not (p x)) (exists ((y Int)) (q x y)))) ======================================
TODO: generator
=== (exists ((x Int)) (forall ((y Color)) (color x y))) ======================================
TODO: generator
===========================================
Tables and Views:
 - Bool (table)
 - _xmt_sort_color (table)
 - _xmt_interp_p_T (table)
 - _xmt_interp_p_TU (view)
 - _xmt_interp_q_T (table)
 - _xmt_interp_q_TU (view)
 - _xmt_interp_color_T (table)
 - _xmt_interp_color_TU (view)
 - sqlite_stat1 (table)
 - sqlite_stat4 (table)
error: at position (20, 10): Unknown table

   |
20 | (x-debug db _xmt_interp_row_T)
   |          ^ Unknown table

   |