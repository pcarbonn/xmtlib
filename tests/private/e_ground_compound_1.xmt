(set-option :backend none)
(declare-datatype T ( ( a ) ( b ) ))
(declare-datatype Tf ( ( A ) ( B ) ))
(declare-fun p (T Tf) Bool)
(x-interpret-fun p
  (x-mapping
   ((a A) true)
   ((a B) false)
   ((b A) false)
  ) ?)
(declare-fun f (T) Tf)
(x-interpret-fun f (x-mapping
   ((a) A)
) ? )
(assert (p b B))
(assert (forall ((x T)) (p x (f x)) ))
(x-ground)
(x-debug db _xmt_p_g)
(x-debug solver groundings)
(x-debug db tables)
-------------------------
(declare-datatype T ((a ) (b )))
(declare-datatype Tf ((A ) (B )))
(declare-fun p (T Tf) Bool)
(declare-fun f (T) Tf)
(assert (p b B))
(assert (not (= (f b) A)))
(assert (=> (= (f b) B) (p b B)))
 TABLE: _xmt_p_g
┌─────┬─────┬───────────┐
│ a_1 │ a_2 │ G         │
├─────┼─────┼───────────┤
│ "a" │ "A" │ "true"    │
├─────┼─────┼───────────┤
│ "a" │ "B" │ "false"   │
├─────┼─────┼───────────┤
│ "b" │ "A" │ "false"   │
├─────┼─────┼───────────┤
│ "b" │ "B" │ "(p b B)" │
└─────┴─────┴───────────┘
Groundings:
 - b: SELECT "b" AS G
 - B: SELECT "B" AS G
 - (p b B):
    TU: SELECT _xmt_p_TU_2.G AS G
  FROM _xmt_p_TU AS _xmt_p_TU_2
 WHERE "b" = _xmt_p_TU_2.a_1 AND "B" = _xmt_p_TU_2.a_2
    UF: SELECT _xmt_p_UF_2.G AS G
  FROM _xmt_p_UF AS _xmt_p_UF_2
 WHERE "b" = _xmt_p_UF_2.a_1 AND "B" = _xmt_p_UF_2.a_2
    G : SELECT _xmt_p_G_2.G AS G
  FROM _xmt_p_G AS _xmt_p_G_2
 WHERE "b" = _xmt_p_G_2.a_1 AND "B" = _xmt_p_G_2.a_2
 - x: SELECT _xmt_t_3.G AS x,
       _xmt_t_3.G AS G
  FROM _xmt_t AS _xmt_t_3
 - (f x): SELECT _xmt_f_G_4.a_1 AS x,
       _xmt_f_G_4.G AS G
  FROM _xmt_f_G AS _xmt_f_G_4
 - (p x (f x)):
    TU: SELECT _xmt_p_TU_5.a_1 AS x,
       if_(_xmt_f_G_4.G, _xmt_p_TU_5.a_2) AS if_, 
       _xmt_p_TU_5.G AS G
  FROM _xmt_f_G AS _xmt_f_G_4
  JOIN _xmt_p_TU AS _xmt_p_TU_5
        ON join_(_xmt_f_G_4.G, _xmt_p_TU_5.a_2)
 WHERE _xmt_p_TU_5.a_1 = _xmt_f_G_4.a_1
    UF: SELECT _xmt_p_UF_5.a_1 AS x,
       if_(_xmt_f_G_4.G, _xmt_p_UF_5.a_2) AS if_, 
       _xmt_p_UF_5.G AS G
  FROM _xmt_f_G AS _xmt_f_G_4
  JOIN _xmt_p_UF AS _xmt_p_UF_5
        ON join_(_xmt_f_G_4.G, _xmt_p_UF_5.a_2)
 WHERE _xmt_p_UF_5.a_1 = _xmt_f_G_4.a_1
    G : SELECT _xmt_p_G_5.a_1 AS x,
       if_(_xmt_f_G_4.G, _xmt_p_G_5.a_2) AS if_, 
       _xmt_p_G_5.G AS G
  FROM _xmt_f_G AS _xmt_f_G_4
  JOIN _xmt_p_G AS _xmt_p_G_5
        ON join_(_xmt_f_G_4.G, _xmt_p_G_5.a_2)
 WHERE _xmt_p_G_5.a_1 = _xmt_f_G_4.a_1
 - (forall ((x T)) (p x (f x))):
    TU: SELECT and_aggregate(implies_(if_, G)) as G
 FROM (SELECT _xmt_p_G_5.a_1 AS x,
              if_(_xmt_f_G_4.G, _xmt_p_G_5.a_2) AS if_, 
              _xmt_p_G_5.G AS G
         FROM _xmt_f_G AS _xmt_f_G_4
         JOIN _xmt_p_G AS _xmt_p_G_5
               ON join_(_xmt_f_G_4.G, _xmt_p_G_5.a_2)
        WHERE _xmt_p_G_5.a_1 = _xmt_f_G_4.a_1)
    UF: SELECT implies_(if_, G) as G
 FROM (SELECT _xmt_p_UF_5.a_1 AS x,
              if_(_xmt_f_G_4.G, _xmt_p_UF_5.a_2) AS if_, 
              _xmt_p_UF_5.G AS G
         FROM _xmt_f_G AS _xmt_f_G_4
         JOIN _xmt_p_UF AS _xmt_p_UF_5
               ON join_(_xmt_f_G_4.G, _xmt_p_UF_5.a_2)
        WHERE _xmt_p_UF_5.a_1 = _xmt_f_G_4.a_1)
    G : SELECT and_aggregate(implies_(if_, G)) as G
 FROM (SELECT _xmt_p_G_5.a_1 AS x,
              if_(_xmt_f_G_4.G, _xmt_p_G_5.a_2) AS if_, 
              _xmt_p_G_5.G AS G
         FROM _xmt_f_G AS _xmt_f_G_4
         JOIN _xmt_p_G AS _xmt_p_G_5
               ON join_(_xmt_f_G_4.G, _xmt_p_G_5.a_2)
        WHERE _xmt_p_G_5.a_1 = _xmt_f_G_4.a_1)
Tables and Views:
 - Bool (table)
 - _xmt_t (table)
 - _xmt_tf (table)
 - _xmt_p_TU_K (table)
 - _xmt_p_UF_K (table)
 - _xmt_p_K (table)
 - _xmt_p_U (view)
 - _xmt_p_G (view)
 - _xmt_p_TU (view)
 - _xmt_p_UF (view)
 - _xmt_f_K (table)
 - _xmt_f_U (view)
 - _xmt_f_G (view)
 - sqlite_stat1 (table)
 - sqlite_stat4 (table)
