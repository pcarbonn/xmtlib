(set-option :backend none)
(declare-datatype Color ( ( red ) ( green ) ))

; arity 0
(declare-const C Color)
(x-interpret-const C red)
(declare-fun c () Color)
(x-interpret-fun c (x-mapping (() red)))
(assert (= c green))
(declare-fun p () Bool)
(x-interpret-fun p (x-mapping ) true)

; arity 2
(declare-fun Mix (Color Color) Color)
(declare-fun mix (Color Color) Color)
(x-interpret-fun mix
   (x-mapping
     ((red red) green)
     ((green green) ?)
     ((red green) green)
     ((green red) green)
   ))
(x-interpret-fun Mix
   (x-mapping
      ((red red) green)
   ) ?)
(assert (exists ((x Color)) (= (mix x x) x)))
(assert (exists ((x Color)) (= (mix x x) x green)))

(x-ground debug:)
(x-debug solver functions)
(x-debug solver groundings)
(x-debug db tables)
(x-debug db _xmt_p_UF)
(x-debug db _xmt_mix_g)

; infinite
(declare-fun RGB (Int) Color)
(x-interpret-fun RGB
   (x-mapping
      ((0) red)
   ) red
)
-------------------------
(declare-datatype Color ((red ) (green )))
(declare-const C Color)
(declare-fun c () Color)
(declare-fun p () Bool)
(declare-fun Mix (Color Color) Color)
(declare-fun mix (Color Color) Color)
(assert false)
(assert (= (mix green green) green))
(assert (= (mix green green) green green))
Functions2:
 - true ()->Bool : Constructor
 - false ()->Bool : Constructor
 - not ()->Bool : Predefined (true)
 - => ()->Bool : Predefined (true)
 - and ()->Bool : Predefined (true)
 - or ()->Bool : Predefined (true)
 - xor ()->Bool : Predefined (true)
 - = ()->Bool : Predefined (true)
 - distinct ()->Bool : Predefined (true)
 - <= ()->Bool : Predefined (true)
 - < ()->Bool : Predefined (true)
 - >= ()->Bool : Predefined (true)
 - > ()->Bool : Predefined (true)
 - ite ()->Bool : Predefined (?)
 - let ()->Bool : Predefined (?)
 - + ()->Real : Predefined (false)
 - - ()->Real : Predefined (false)
 - * ()->Real : Predefined (false)
 - div ()->Real : Predefined (false)
 - mod ()->Real : Predefined (false)
 - abs ()->Real : Predefined (false)
 - red ()->Color : Constructor
 - green ()->Color : Constructor
 - (_ is red) (Color)->Bool : Boolean (_xmt_color_red_tester_t Complete, _xmt_color_red_tester_f Complete, _xmt_color_red_tester_g Complete)
 - (_ is green) (Color)->Bool : Boolean (_xmt_color_green_tester_t Complete, _xmt_color_green_tester_f Complete, _xmt_color_green_tester_g Complete)
 - C ()->Color : Non Boolean (_xmt_c_G Complete)
 - c ()->Color : Non Boolean (_xmt_c_8_G Complete)
 - p ()->Bool : Boolean (_xmt_p_TU Complete, _xmt_p_UF Complete, _xmt_p_G Complete)
 - Mix (Color, Color)->Color : Non Boolean (_xmt_mix_11_G Partial)
 - mix (Color, Color)->Color : Non Boolean (_xmt_mix_G Partial)
Groundings:
===  c ======================================
 -- Join(0)
SELECT _xmt_c_8_G.G AS G
  FROM _xmt_c_8_G AS _xmt_c_8_G
===  green ======================================
 -- Join(0)
SELECT "green" AS G
=== (top) (= c green) ======================================
----- T ------------------------------------------------------------
-- Join(0)
SELECT eq_(_xmt_c_8_G.G, "green") AS G
  FROM _xmt_c_8_G AS _xmt_c_8_G
----- F ------------------------------------------------------------
-- Join(0)
SELECT eq_(_xmt_c_8_G.G, "green") AS G
  FROM _xmt_c_8_G AS _xmt_c_8_G
----- G ------------------------------------------------------------
-- Join(0)
SELECT eq_(_xmt_c_8_G.G, "green") AS G
  FROM _xmt_c_8_G AS _xmt_c_8_G

===  x ======================================
 -- Join(0)
SELECT _xmt_color_3.G AS x,
       _xmt_color_3.G AS G
  FROM _xmt_color AS _xmt_color_3
===  (mix x x) ======================================
 -- Join(0)
SELECT _xmt_mix_G_4.a_1 AS x,
       _xmt_mix_G_4.G AS G
  FROM _xmt_mix_G AS _xmt_mix_G_4
 WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2
===  (= (mix x x) x) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_mix_G_4.a_1 AS x,
       eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1) AS G
  FROM _xmt_mix_G AS _xmt_mix_G_4
 WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_mix_G_4.a_1 AS x,
       eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1) AS G
  FROM _xmt_mix_G AS _xmt_mix_G_4
 WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_mix_G_4.a_1 AS x,
       eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1) AS G
  FROM _xmt_mix_G AS _xmt_mix_G_4
 WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2

=== (top) (exists ((x Color)) (= (mix x x) x)) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (-- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_mix_G_4.a_1 AS x,
                     eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1) AS G
                FROM _xmt_mix_G AS _xmt_mix_G_4
               WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2)
        WHERE G <> "false")
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (SELECT NULL AS x, "false" AS G UNION ALL -- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_mix_G_4.a_1 AS x,
                     eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1) AS G
                FROM _xmt_mix_G AS _xmt_mix_G_4
               WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2)
        WHERE G <> "false")
----- G ------------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (SELECT NULL AS x, "false" AS G UNION ALL -- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_mix_G_4.a_1 AS x,
                     eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1) AS G
                FROM _xmt_mix_G AS _xmt_mix_G_4
               WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2)
        WHERE G <> "false")

===  (= (mix x x) x green) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_mix_G_4.a_1 AS x,
       eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1, "green") AS G
  FROM _xmt_mix_G AS _xmt_mix_G_4
 WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_mix_G_4.a_1 AS x,
       eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1, "green") AS G
  FROM _xmt_mix_G AS _xmt_mix_G_4
 WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_mix_G_4.a_1 AS x,
       eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1, "green") AS G
  FROM _xmt_mix_G AS _xmt_mix_G_4
 WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2

=== (top) (exists ((x Color)) (= (mix x x) x green)) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (-- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_mix_G_4.a_1 AS x,
                     eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1, "green") AS G
                FROM _xmt_mix_G AS _xmt_mix_G_4
               WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2)
        WHERE G <> "false")
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (SELECT NULL AS x, "false" AS G UNION ALL -- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_mix_G_4.a_1 AS x,
                     eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1, "green") AS G
                FROM _xmt_mix_G AS _xmt_mix_G_4
               WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2)
        WHERE G <> "false")
----- G ------------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (SELECT NULL AS x, "false" AS G UNION ALL -- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_mix_G_4.a_1 AS x,
                     eq_(_xmt_mix_G_4.G, _xmt_mix_G_4.a_1, "green") AS G
                FROM _xmt_mix_G AS _xmt_mix_G_4
               WHERE _xmt_mix_G_4.a_1 = _xmt_mix_G_4.a_2)
        WHERE G <> "false")

===========================================
Tables and Views:
 - Bool (table)
 - _xmt_color (table)
 - _xmt_color_red_tester_g (view)
 - _xmt_color_red_tester_t (view)
 - _xmt_color_red_tester_f (view)
 - _xmt_color_green_tester_g (view)
 - _xmt_color_green_tester_t (view)
 - _xmt_color_green_tester_f (view)
 - _xmt_c_G (view)
 - _xmt_c_8_G (view)
 - _xmt_p_TU (view)
 - _xmt_p_UF (view)
 - _xmt_p_G (view)
 - _xmt_mix_G (table)
 - _xmt_mix_11_K (table)
 - _xmt_mix_11_U (view)
 - _xmt_mix_11_G (view)
 - sqlite_stat1 (table)
 - sqlite_stat4 (table)
 TABLE: _xmt_p_uf
┌───┐
│ G │
└───┘
 TABLE: _xmt_mix_g
┌─────────┬─────────┬─────────────────────┐
│ a_1     │ a_2     │ G                   │
├─────────┼─────────┼─────────────────────┤
│ "red"   │ "red"   │ "green"             │
├─────────┼─────────┼─────────────────────┤
│ "green" │ "green" │ "(mix green green)" │
├─────────┼─────────┼─────────────────────┤
│ "red"   │ "green" │ "green"             │
├─────────┼─────────┼─────────────────────┤
│ "green" │ "red"   │ "green"             │
└─────────┴─────────┴─────────────────────┘
(declare-fun RGB (Int) Color)
error: at position (39, 18): Cannot interpret a symbol with infinite domain
   |
39 | (x-interpret-fun RGB
   |                  ^ Cannot interpret a symbol with infinite domain
   |