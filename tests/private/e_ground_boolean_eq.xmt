(set-option :backend none)
(declare-fun domain (Int) Bool)
(declare-fun P (Int) Bool)
(declare-fun Q (Int) Bool)
(assert (forall ((x Int)) (=> (domain x)
                              (= (P x)
                                 (Q x)
                              ))))

(x-interpret-pred domain (x-range 1 10))

(declare-datatype Color ( ( red ) ( blue ) ( green ) ))
(declare-fun p (Color) Bool)
(declare-fun q (Color) Bool)
(declare-fun r (Color) Bool)
(x-interpret-fun p (x-mapping
       ((red) true)
) ?)
(x-interpret-fun q (x-mapping
       ((blue) true)
) ?)
(assert (forall ((x Color)) (= (p x)
                               (q x)
                            )))
(x-ground debug:)
(x-debug solver groundings)
(assert (forall ((x Color)) (= (p x)
                               (q x)
                               (r x)
                            )))
(x-ground debug:)
-------------------------
(declare-fun domain (Int) Bool)
(declare-fun P (Int) Bool)
(declare-fun Q (Int) Bool)
(declare-datatype Color ((red ) (blue ) (green )))
(declare-fun p (Color) Bool)
(declare-fun q (Color) Bool)
(declare-fun r (Color) Bool)
(assert (= (P 1) (Q 1)))
(assert (= (P 2) (Q 2)))
(assert (= (P 3) (Q 3)))
(assert (= (P 4) (Q 4)))
(assert (= (P 5) (Q 5)))
(assert (= (P 6) (Q 6)))
(assert (= (P 7) (Q 7)))
(assert (= (P 8) (Q 8)))
(assert (= (P 9) (Q 9)))
(assert (= (P 10) (Q 10)))
(assert (= (p blue) true))
(assert (= (p green) (q green)))
(assert (= true (q red)))
Groundings:
===  x ======================================
 -- Join(0)
SELECT "x" AS x,
       "x" AS G
===  (domain x) ======================================
----- T ------------------------------------------------------------
-- Join(0)
SELECT _xmt_domain_TU_1.a_1 AS x,
       "true" AS G
  FROM _xmt_domain_TU AS _xmt_domain_TU_1
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("domain", "x") AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("domain", "x") AS G

===  (not (domain x)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("not", apply("domain", "x")) AS G
----- F ------------------------------------------------------------
-- Join(0)
SELECT _xmt_domain_TU_1.a_1 AS x,
       "false" AS G
  FROM _xmt_domain_TU AS _xmt_domain_TU_1
----- G ------------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("not", apply("domain", "x")) AS G

===  (P x) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("P", "x") AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("P", "x") AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("P", "x") AS G

===  (Q x) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("Q", "x") AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("Q", "x") AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "x" AS x,
       apply("Q", "x") AS G

===  (= (P x) (Q x)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT Outer_0.x AS x,
       bool_eq_("true", Outer_0.G, Outer_1.G) AS G
  FROM (-- Join(8)
        SELECT "x" AS x,
               apply("P", "x") AS G
        ) AS Outer_0
  FULL JOIN (-- Join(8)
        SELECT "x" AS x,
               apply("Q", "x") AS G
        ) AS Outer_1 ON  Outer_1.x = Outer_0.x
----- UF -----------------------------------------------------------
-- Join(0)
SELECT Outer_0.x AS x,
       bool_eq_("true", Outer_0.G, Outer_1.G) AS G
  FROM (-- Join(8)
        SELECT "x" AS x,
               apply("P", "x") AS G
        ) AS Outer_0
  FULL JOIN (-- Join(8)
        SELECT "x" AS x,
               apply("Q", "x") AS G
        ) AS Outer_1 ON  Outer_1.x = Outer_0.x
----- G ------------------------------------------------------------
-- Join(0)
SELECT Outer_0.x AS x,
       bool_eq_("true", Outer_0.G, Outer_1.G) AS G
  FROM (-- Join(8)
        SELECT "x" AS x,
               apply("P", "x") AS G
        ) AS Outer_0
  FULL JOIN (-- Join(8)
        SELECT "x" AS x,
               apply("Q", "x") AS G
        ) AS Outer_1 ON  Outer_1.x = Outer_0.x

===  (or (not (domain x)) (= (P x) (Q x))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT x,
       or_aggregate(G) as G
 FROM (-- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT "x" AS x,
                     apply("not", apply("domain", "x")) AS G
              UNION ALL
              -- Join(14)
              SELECT Outer_0.x AS x,
                     bool_eq_("true", Outer_0.G, Outer_1.G) AS G
                FROM (-- Join(22)
                      SELECT "x" AS x,
                             apply("P", "x") AS G
                      ) AS Outer_0
                FULL JOIN (-- Join(22)
                      SELECT "x" AS x,
                             apply("Q", "x") AS G
                      ) AS Outer_1 ON  Outer_1.x = Outer_0.x)
        WHERE G <> "false")
 GROUP BY x
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_domain_TU_1.a_1 AS x,
       _xmt__5_23.G AS G
  FROM (-- Join(8)
        SELECT Outer_0.x AS x,
               bool_eq_("true", Outer_0.G, Outer_1.G) AS G
          FROM (-- Join(16)
                SELECT _xmt_domain_TU_1.a_1 AS x,
                       apply("P", _xmt_domain_TU_1.a_1) AS G
                  FROM _xmt_domain_TU AS _xmt_domain_TU_1
                ) AS Outer_0
          FULL JOIN (-- Join(16)
                SELECT _xmt_domain_TU_1.a_1 AS x,
                       apply("Q", _xmt_domain_TU_1.a_1) AS G
                  FROM _xmt_domain_TU AS _xmt_domain_TU_1
                ) AS Outer_1 ON  Outer_1.x = Outer_0.x
        ) AS _xmt__5_23
  JOIN _xmt_domain_TU AS _xmt_domain_TU_1
 WHERE  _xmt__5_23.x = _xmt_domain_TU_1.a_1
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt__5_24.x AS x,
       apply("or", apply("not", apply("domain", _xmt__5_24.x)), _xmt__5_24.G) AS G
  FROM (-- Join(8)
        SELECT Outer_0.x AS x,
               bool_eq_("true", Outer_0.G, Outer_1.G) AS G
          FROM (-- Join(16)
                SELECT "x" AS x,
                       apply("P", "x") AS G
                ) AS Outer_0
          FULL JOIN (-- Join(16)
                SELECT "x" AS x,
                       apply("Q", "x") AS G
                ) AS Outer_1 ON  Outer_1.x = Outer_0.x
        ) AS _xmt__5_24

=== (top) (forall ((x Int)) (or (not (domain x)) (= (P x) (Q x)))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT "(forall ((x Int)) " || and_aggregate(G) || ")" as G
 FROM (-- Join(7)
       SELECT _xmt__5_24.x AS x,
              apply("or", apply("not", apply("domain", _xmt__5_24.x)), _xmt__5_24.G) AS G
         FROM (-- Join(15)
               SELECT Outer_0.x AS x,
                      bool_eq_("true", Outer_0.G, Outer_1.G) AS G
                 FROM (-- Join(23)
                       SELECT "x" AS x,
                              apply("P", "x") AS G
                       ) AS Outer_0
                 FULL JOIN (-- Join(23)
                       SELECT "x" AS x,
                              apply("Q", "x") AS G
                       ) AS Outer_1 ON  Outer_1.x = Outer_0.x
               ) AS _xmt__5_24)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT G as G
 FROM (-- Join(7)
       SELECT _xmt_domain_TU_1.a_1 AS x,
              _xmt__5_23.G AS G
         FROM (-- Join(15)
               SELECT Outer_0.x AS x,
                      bool_eq_("true", Outer_0.G, Outer_1.G) AS G
                 FROM (-- Join(23)
                       SELECT _xmt_domain_TU_1.a_1 AS x,
                              apply("P", _xmt_domain_TU_1.a_1) AS G
                         FROM _xmt_domain_TU AS _xmt_domain_TU_1
                       ) AS Outer_0
                 FULL JOIN (-- Join(23)
                       SELECT _xmt_domain_TU_1.a_1 AS x,
                              apply("Q", _xmt_domain_TU_1.a_1) AS G
                         FROM _xmt_domain_TU AS _xmt_domain_TU_1
                       ) AS Outer_1 ON  Outer_1.x = Outer_0.x
               ) AS _xmt__5_23
         JOIN _xmt_domain_TU AS _xmt_domain_TU_1
        WHERE  _xmt__5_23.x = _xmt_domain_TU_1.a_1)
----- G ------------------------------------------------------------
-- Agg (0)
SELECT "(forall ((x Int)) " || and_aggregate(G) || ")" as G
 FROM (-- Join(7)
       SELECT _xmt__5_24.x AS x,
              apply("or", apply("not", apply("domain", _xmt__5_24.x)), _xmt__5_24.G) AS G
         FROM (-- Join(15)
               SELECT Outer_0.x AS x,
                      bool_eq_("true", Outer_0.G, Outer_1.G) AS G
                 FROM (-- Join(23)
                       SELECT "x" AS x,
                              apply("P", "x") AS G
                       ) AS Outer_0
                 FULL JOIN (-- Join(23)
                       SELECT "x" AS x,
                              apply("Q", "x") AS G
                       ) AS Outer_1 ON  Outer_1.x = Outer_0.x
               ) AS _xmt__5_24)

===  x ======================================
 -- Join(0)
SELECT _xmt_color_8.G AS x,
       _xmt_color_8.G AS G
  FROM _xmt_color AS _xmt_color_8
===  (p x) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_TU_9.a_1 AS x,
       _xmt_p_TU_9.G AS G
  FROM _xmt_p_TU AS _xmt_p_TU_9
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_UF_9.a_1 AS x,
       _xmt_p_UF_9.G AS G
  FROM _xmt_p_UF AS _xmt_p_UF_9
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_p_G_9.a_1 AS x,
       _xmt_p_G_9.G AS G
  FROM _xmt_p_G AS _xmt_p_G_9

===  (q x) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_q_TU_10.a_1 AS x,
       _xmt_q_TU_10.G AS G
  FROM _xmt_q_TU AS _xmt_q_TU_10
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_q_UF_10.a_1 AS x,
       _xmt_q_UF_10.G AS G
  FROM _xmt_q_UF AS _xmt_q_UF_10
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_q_G_10.a_1 AS x,
       _xmt_q_G_10.G AS G
  FROM _xmt_q_G AS _xmt_q_G_10

===  (= (p x) (q x)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_9_28.x AS x,
       bool_eq_("true", _xmt_p_9_28.G, _xmt_q_10_31.G) AS G
  FROM (-- Join(8)
        SELECT _xmt_p_UF_9.a_1 AS x,
               _xmt_p_UF_9.G AS G
          FROM _xmt_p_UF AS _xmt_p_UF_9
        ) AS _xmt_p_9_28
  FULL JOIN (-- Join(8)
        SELECT _xmt_q_UF_10.a_1 AS x,
               _xmt_q_UF_10.G AS G
          FROM _xmt_q_UF AS _xmt_q_UF_10
        ) AS _xmt_q_10_31 ON  _xmt_q_10_31.x = _xmt_p_9_28.x
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_9_28.x AS x,
       bool_eq_("true", _xmt_p_9_28.G, _xmt_q_10_31.G) AS G
  FROM (-- Join(8)
        SELECT _xmt_p_UF_9.a_1 AS x,
               _xmt_p_UF_9.G AS G
          FROM _xmt_p_UF AS _xmt_p_UF_9
        ) AS _xmt_p_9_28
  FULL JOIN (-- Join(8)
        SELECT _xmt_q_UF_10.a_1 AS x,
               _xmt_q_UF_10.G AS G
          FROM _xmt_q_UF AS _xmt_q_UF_10
        ) AS _xmt_q_10_31 ON  _xmt_q_10_31.x = _xmt_p_9_28.x
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_p_9_28.x AS x,
       bool_eq_("true", _xmt_p_9_28.G, _xmt_q_10_31.G) AS G
  FROM (-- Join(8)
        SELECT _xmt_p_UF_9.a_1 AS x,
               _xmt_p_UF_9.G AS G
          FROM _xmt_p_UF AS _xmt_p_UF_9
        ) AS _xmt_p_9_28
  FULL JOIN (-- Join(8)
        SELECT _xmt_q_UF_10.a_1 AS x,
               _xmt_q_UF_10.G AS G
          FROM _xmt_q_UF AS _xmt_q_UF_10
        ) AS _xmt_q_10_31 ON  _xmt_q_10_31.x = _xmt_p_9_28.x

=== (top) (forall ((x Color)) (= (p x) (q x))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (-- Join(7)
       SELECT _xmt_p_9_28.x AS x,
              bool_eq_("true", _xmt_p_9_28.G, _xmt_q_10_31.G) AS G
         FROM (-- Join(15)
               SELECT _xmt_p_UF_9.a_1 AS x,
                      _xmt_p_UF_9.G AS G
                 FROM _xmt_p_UF AS _xmt_p_UF_9
               ) AS _xmt_p_9_28
         FULL JOIN (-- Join(15)
               SELECT _xmt_q_UF_10.a_1 AS x,
                      _xmt_q_UF_10.G AS G
                 FROM _xmt_q_UF AS _xmt_q_UF_10
               ) AS _xmt_q_10_31 ON  _xmt_q_10_31.x = _xmt_p_9_28.x)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT G as G
 FROM (-- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_p_9_28.x AS x,
                     bool_eq_("true", _xmt_p_9_28.G, _xmt_q_10_31.G) AS G
                FROM (-- Join(22)
                      SELECT _xmt_p_UF_9.a_1 AS x,
                             _xmt_p_UF_9.G AS G
                        FROM _xmt_p_UF AS _xmt_p_UF_9
                      ) AS _xmt_p_9_28
                FULL JOIN (-- Join(22)
                      SELECT _xmt_q_UF_10.a_1 AS x,
                             _xmt_q_UF_10.G AS G
                        FROM _xmt_q_UF AS _xmt_q_UF_10
                      ) AS _xmt_q_10_31 ON  _xmt_q_10_31.x = _xmt_p_9_28.x)
        WHERE G <> "true")
----- G ------------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (-- Join(7)
       SELECT _xmt_p_9_28.x AS x,
              bool_eq_("true", _xmt_p_9_28.G, _xmt_q_10_31.G) AS G
         FROM (-- Join(15)
               SELECT _xmt_p_UF_9.a_1 AS x,
                      _xmt_p_UF_9.G AS G
                 FROM _xmt_p_UF AS _xmt_p_UF_9
               ) AS _xmt_p_9_28
         FULL JOIN (-- Join(15)
               SELECT _xmt_q_UF_10.a_1 AS x,
                      _xmt_q_UF_10.G AS G
                 FROM _xmt_q_UF AS _xmt_q_UF_10
               ) AS _xmt_q_10_31 ON  _xmt_q_10_31.x = _xmt_p_9_28.x)

===========================================
error: at position (27, 29): Too many boolean arguments
   |
27 | (assert (forall ((x Color)) (= (p x)
   |                             ^ Too many boolean arguments
   |