(set-option :backend none)
(declare-datatype T ( ( a ) ( b ) ))
(declare-datatype Tf ( ( A ) ( B ) ))
(declare-fun p (T Tf) Bool)
(x-interpret-fun p (x-mapping
   ((a A) false)
   ((a B) ?)
) true )

(declare-fun f (T) Tf)
(assert (forall ((x T)) (and (p x (f a)) (p x (f b)) ) ))
(assert (forall ((x T)) (p (f x) (f x)) ))
(x-ground)
(x-debug solver groundings)
(x-debug db tables)
-------------------------
(declare-datatype T ((a ) (b )))
(declare-datatype Tf ((A ) (B )))
(declare-fun p (T Tf) Bool)
(declare-fun f (T) Tf)
(assert (and (not (= (f a) A)) (=> (= (f a) B) (p a B)) (not (= (f b) A)) (=> (= (f b) B) (p a B))))
(assert (not (and (= (f a) a) (= (f a) A))))
(assert (=> (and (= (f a) a) (= (f a) B)) (p a B)))
(assert (not (and (= (f b) a) (= (f b) A))))
(assert (=> (and (= (f b) a) (= (f b) B)) (p a B)))
Groundings:
===  x ======================================
 -- Join(0)
SELECT _xmt_t.G AS x,
       _xmt_t.G AS G
  FROM _xmt_t
===  a ======================================
 -- Join(0)
SELECT "a" AS G
===  (f a) ======================================
 -- Join(0)
SELECT apply("f", "a") AS G
===  (p x (f a)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_TU_3.a_1 AS x,
       apply("=",apply("f", "a"), _xmt_p_TU_3.a_2) AS if_, 
       _xmt_p_TU_3.G AS G
  FROM _xmt_p_TU AS _xmt_p_TU_3
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_UF_3.a_1 AS x,
       apply("=",apply("f", "a"), _xmt_p_UF_3.a_2) AS if_, 
       _xmt_p_UF_3.G AS G
  FROM _xmt_p_UF AS _xmt_p_UF_3
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_p_G_3.a_1 AS x,
       apply("=",apply("f", "a"), _xmt_p_G_3.a_2) AS if_, 
       _xmt_p_G_3.G AS G
  FROM _xmt_p_G AS _xmt_p_G_3

===  b ======================================
 -- Join(0)
SELECT "b" AS G
===  (f b) ======================================
 -- Join(0)
SELECT apply("f", "b") AS G
===  (p x (f b)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_TU_6.a_1 AS x,
       apply("=",apply("f", "b"), _xmt_p_TU_6.a_2) AS if_, 
       _xmt_p_TU_6.G AS G
  FROM _xmt_p_TU AS _xmt_p_TU_6
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_UF_6.a_1 AS x,
       apply("=",apply("f", "b"), _xmt_p_UF_6.a_2) AS if_, 
       _xmt_p_UF_6.G AS G
  FROM _xmt_p_UF AS _xmt_p_UF_6
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_p_G_6.a_1 AS x,
       apply("=",apply("f", "b"), _xmt_p_G_6.a_2) AS if_, 
       _xmt_p_G_6.G AS G
  FROM _xmt_p_G AS _xmt_p_G_6

===  (and (p x (f a)) (p x (f b))) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_p_TU_3.a_1 AS x,
       and_(apply("=",apply("f", "a"), _xmt_p_TU_3.a_2), apply("=",apply("f", "b"), _xmt_p_TU_6.a_2)) AS if_,
       and_(_xmt_p_TU_3.G, _xmt_p_TU_6.G) AS G
  FROM _xmt_p_TU AS _xmt_p_TU_3
  JOIN _xmt_p_TU AS _xmt_p_TU_6
        ON _xmt_p_TU_3.a_1 = _xmt_p_TU_6.a_1
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT x,
       and_aggregate(implies_(if_, G)) as G
 FROM (-- Join(7)
       SELECT _xmt_p_UF_3.a_1 AS x,
              apply("=",apply("f", "a"), _xmt_p_UF_3.a_2) AS if_, 
              _xmt_p_UF_3.G AS G
         FROM _xmt_p_UF AS _xmt_p_UF_3
       UNION
       -- Join(7)
       SELECT _xmt_p_UF_6.a_1 AS x,
              apply("=",apply("f", "b"), _xmt_p_UF_6.a_2) AS if_, 
              _xmt_p_UF_6.G AS G
         FROM _xmt_p_UF AS _xmt_p_UF_6)
 GROUP BY x
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_p_G_3.a_1 AS x,
       and_(apply("=",apply("f", "a"), _xmt_p_G_3.a_2), apply("=",apply("f", "b"), _xmt_p_G_6.a_2)) AS if_,
       and_(_xmt_p_G_3.G, _xmt_p_G_6.G) AS G
  FROM _xmt_p_G AS _xmt_p_G_3
  JOIN _xmt_p_G AS _xmt_p_G_6
        ON _xmt_p_G_3.a_1 = _xmt_p_G_6.a_1

=== (top) (forall ((x T)) (and (p x (f a)) (p x (f b)))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(implies_(if_, G)) as G
 FROM (-- Join(7)
       SELECT _xmt_p_G_3.a_1 AS x,
              and_(apply("=",apply("f", "a"), _xmt_p_G_3.a_2), apply("=",apply("f", "b"), _xmt_p_G_6.a_2)) AS if_,
              and_(_xmt_p_G_3.G, _xmt_p_G_6.G) AS G
         FROM _xmt_p_G AS _xmt_p_G_3
         JOIN _xmt_p_G AS _xmt_p_G_6
               ON _xmt_p_G_3.a_1 = _xmt_p_G_6.a_1)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT G as G
 FROM (-- Agg (7)
       SELECT x,
              and_aggregate(implies_(if_, G)) as G
        FROM (-- Join(14)
              SELECT _xmt_p_UF_3.a_1 AS x,
                     apply("=",apply("f", "a"), _xmt_p_UF_3.a_2) AS if_, 
                     _xmt_p_UF_3.G AS G
                FROM _xmt_p_UF AS _xmt_p_UF_3
              UNION
              -- Join(14)
              SELECT _xmt_p_UF_6.a_1 AS x,
                     apply("=",apply("f", "b"), _xmt_p_UF_6.a_2) AS if_, 
                     _xmt_p_UF_6.G AS G
                FROM _xmt_p_UF AS _xmt_p_UF_6)
        GROUP BY x)
----- G ------------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(implies_(if_, G)) as G
 FROM (-- Join(7)
       SELECT _xmt_p_G_3.a_1 AS x,
              and_(apply("=",apply("f", "a"), _xmt_p_G_3.a_2), apply("=",apply("f", "b"), _xmt_p_G_6.a_2)) AS if_,
              and_(_xmt_p_G_3.G, _xmt_p_G_6.G) AS G
         FROM _xmt_p_G AS _xmt_p_G_3
         JOIN _xmt_p_G AS _xmt_p_G_6
               ON _xmt_p_G_3.a_1 = _xmt_p_G_6.a_1)

===  (f x) ======================================
 -- Join(0)
SELECT _xmt_t.G AS x,
       apply("f", _xmt_t.G) AS G
  FROM _xmt_t
===  (p (f x) (f x)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT _xmt_t.G AS x,
       and_(apply("=",apply("f", _xmt_t.G), _xmt_p_TU_10.a_1), apply("=",apply("f", _xmt_t.G), _xmt_p_TU_10.a_2)) AS if_,
       _xmt_p_TU_10.G AS G
  FROM _xmt_t
  JOIN _xmt_p_TU AS _xmt_p_TU_10
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_t.G AS x,
       and_(apply("=",apply("f", _xmt_t.G), _xmt_p_UF_10.a_1), apply("=",apply("f", _xmt_t.G), _xmt_p_UF_10.a_2)) AS if_,
       _xmt_p_UF_10.G AS G
  FROM _xmt_t
  JOIN _xmt_p_UF AS _xmt_p_UF_10
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_t.G AS x,
       and_(apply("=",apply("f", _xmt_t.G), _xmt_p_G_10.a_1), apply("=",apply("f", _xmt_t.G), _xmt_p_G_10.a_2)) AS if_,
       _xmt_p_G_10.G AS G
  FROM _xmt_t
  JOIN _xmt_p_G AS _xmt_p_G_10

=== (top) (forall ((x T)) (p (f x) (f x))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(implies_(if_, G)) as G
 FROM (-- Join(7)
       SELECT _xmt_t.G AS x,
              and_(apply("=",apply("f", _xmt_t.G), _xmt_p_G_10.a_1), apply("=",apply("f", _xmt_t.G), _xmt_p_G_10.a_2)) AS if_,
              _xmt_p_G_10.G AS G
         FROM _xmt_t
         JOIN _xmt_p_G AS _xmt_p_G_10)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT implies_(if_, G) as G
 FROM (-- exclude(7)
       SELECT *
        FROM (-- Join(14)
              SELECT _xmt_t.G AS x,
                     and_(apply("=",apply("f", _xmt_t.G), _xmt_p_UF_10.a_1), apply("=",apply("f", _xmt_t.G), _xmt_p_UF_10.a_2)) AS if_,
                     _xmt_p_UF_10.G AS G
                FROM _xmt_t
                JOIN _xmt_p_UF AS _xmt_p_UF_10)
        WHERE G <> "true")
----- G ------------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(implies_(if_, G)) as G
 FROM (-- Join(7)
       SELECT _xmt_t.G AS x,
              and_(apply("=",apply("f", _xmt_t.G), _xmt_p_G_10.a_1), apply("=",apply("f", _xmt_t.G), _xmt_p_G_10.a_2)) AS if_,
              _xmt_p_G_10.G AS G
         FROM _xmt_t
         JOIN _xmt_p_G AS _xmt_p_G_10)

===========================================
Tables and Views:
 - Bool (table)
 - _xmt_t (table)
 - _xmt_tf (table)
 - _xmt_p_TU_K (table)
 - _xmt_p_UF (table)
 - _xmt_p_K (table)
 - _xmt_p_U (view)
 - _xmt_p_G (view)
 - _xmt_p_TU (view)
 - sqlite_stat1 (table)
 - sqlite_stat4 (table)
