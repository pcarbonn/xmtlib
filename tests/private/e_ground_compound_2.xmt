(set-option :backend none)
(declare-datatype T ( ( a ) ( b ) ))
(declare-datatype Tf ( ( A ) ( B ) ))
(declare-fun p (T Tf) Bool)
(x-interpret-fun p (x-mapping
   ((a A) false)
   ((a B) ?)
) true )

(declare-fun f (T) Tf)
(assert (forall ((x T)) (and (p x (f a)) (p x (f b)) ) ))
(assert (forall ((x T)) (p x (f x)) ))
(x-ground :debug :sql)
(x-debug solver generators)
(x-debug db tables)
------- RESULTS ------------------
(declare-datatype T ((a) (b)))
(declare-datatype Tf ((A) (B)))
(declare-fun p (T Tf) Bool)
(declare-fun f (T) Tf)
; ==== Query =============================
;-- Agg (0)
;SELECT G as G
; FROM (-- Agg (7)
;       SELECT x,
;              and_aggregate(implies_(if_, G)) as G
;        FROM (-- Join(14)
;              SELECT _xmt_interp_p_UF_3.a_1 AS x,
;                     apply("=",apply("f", "a"), _xmt_interp_p_UF_3.a_2) AS if_, 
;                     _xmt_interp_p_UF_3.G AS G
;                FROM _xmt_interp_p_UF AS _xmt_interp_p_UF_3
;              UNION ALL
;              -- Join(14)
;              SELECT _xmt_interp_p_UF_6.a_1 AS x,
;                     apply("=",apply("f", "b"), _xmt_interp_p_UF_6.a_2) AS if_, 
;                     _xmt_interp_p_UF_6.G AS G
;                FROM _xmt_interp_p_UF AS _xmt_interp_p_UF_6)
;        GROUP BY x)(assert (and (not (= (f a) A)) (=> (= (f a) B) (p a B)) (not (= (f b) A)) (=> (= (f b) B) (p a B))))

; ==== Query =============================
;-- Agg (0)
;SELECT implies_(if_, G) as G
; FROM (-- exclude(7)
;       SELECT *
;        FROM (-- Join(14)
;              SELECT _xmt_interp_p_UF_10.a_1 AS x,
;                     apply("=",apply("f", _xmt_interp_p_UF_10.a_1), _xmt_interp_p_UF_10.a_2) AS if_, 
;                     _xmt_interp_p_UF_10.G AS G
;                FROM _xmt_interp_p_UF AS _xmt_interp_p_UF_10)
;        WHERE G <> "true")(assert (not (= (f a) A)))
(assert (=> (= (f a) B) (p a B)))

; ==== Query =============================
;SELECT "true"
; ==== Query =============================
;SELECT "true"
Generators:
=== (forall ((x T)) (and (p x (f a)) (p x (f b)))) ======================================
TODO: generator
=== (forall ((x T)) (p x (f x))) ======================================
TODO: generator
===========================================
Tables and Views:
 - Bool (table)
 - _xmt_sort_t (table)
 - _xmt_sort_tf (table)
 - _xmt_interp_p_TU_K (table)
 - _xmt_interp_p_UF (table)
 - _xmt_interp_p_K (table)
 - _xmt_interp_p_U (view)
 - _xmt_interp_p_G (view)
 - _xmt_interp_p_TU (view)
 - sqlite_stat1 (table)
 - sqlite_stat4 (table)
