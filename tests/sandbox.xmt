(set-option :backend none)
(declare-datatype Color ( ( red ) ( green ) ))
(declare-datatype Hue ( ( hue (first Color) (second Color) ) ))
(declare-fun dim (Hue) Bool)
(x-interpret-pred dim (x-set ((hue red red))))
(assert (exists ((x Hue)) (dim x) ))

(x-ground debug:)
(x-debug db _xmt_Color)
(x-debug db _xmt_Hue)
(x-debug db _xmt_dim_T)
(x-debug solver functions)
(x-debug solver groundings)
-------------------------
(declare-datatype Color ((red ) (green )))
(declare-datatype Hue ((hue (first Color) (second Color))))
(declare-fun dim (Hue) Bool)
 TABLE: _xmt_color
┌─────────────┬─────────┐
│ constructor │ G       │
├─────────────┼─────────┤
│ "red"       │ "red"   │
├─────────────┼─────────┤
│ "green"     │ "green" │
└─────────────┴─────────┘
 TABLE: _xmt_hue
┌─────────────┬─────────┬─────────┬──────────────────────┐
│ constructor │ first   │ second  │ G                    │
├─────────────┼─────────┼─────────┼──────────────────────┤
│ "hue"       │ "green" │ "green" │ " (hue green green)" │
├─────────────┼─────────┼─────────┼──────────────────────┤
│ "hue"       │ "green" │ "red"   │ " (hue green red)"   │
├─────────────┼─────────┼─────────┼──────────────────────┤
│ "hue"       │ "red"   │ "green" │ " (hue red green)"   │
├─────────────┼─────────┼─────────┼──────────────────────┤
│ "hue"       │ "red"   │ "red"   │ " (hue red red)"     │
└─────────────┴─────────┴─────────┴──────────────────────┘
 TABLE: _xmt_dim_t
┌──────────────────┐
│ a_1              │
├──────────────────┤
│ " (hue red red)" │
└──────────────────┘
Functions2:
 - true ()->Bool : Constructor
 - false ()->Bool : Constructor
 - not ()->Bool : Predefined (true)
 - => ()->Bool : Predefined (true)
 - and ()->Bool : Predefined (true)
 - or ()->Bool : Predefined (true)
 - xor ()->Bool : Predefined (true)
 - = ()->Bool : Predefined (true)
 - distinct ()->Bool : Predefined (true)
 - <= ()->Bool : Predefined (true)
 - < ()->Bool : Predefined (true)
 - >= ()->Bool : Predefined (true)
 - > ()->Bool : Predefined (true)
 - ite ()->Bool : Predefined (?)
 - let ()->Bool : Predefined (?)
 - + ()->Real : Predefined (false)
 - - ()->Real : Predefined (false)
 - * ()->Real : Predefined (false)
 - div ()->Real : Predefined (false)
 - mod ()->Real : Predefined (false)
 - abs ()->Real : Predefined (false)
 - red ()->Color : Constructor
 - green ()->Color : Constructor
 - (_ is red) (Color)->Bool : Boolean (_xmt_color_red_tester_t Complete, _xmt_color_red_tester_f Complete, _xmt_color_red_tester_g Complete)
 - (_ is green) (Color)->Bool : Boolean (_xmt_color_green_tester_t Complete, _xmt_color_green_tester_f Complete, _xmt_color_green_tester_g Complete)
 - hue (Color, Color)->Hue : Constructor
 - (_ is hue) (Hue)->Bool : Boolean (_xmt_hue_hue_tester_t Complete, _xmt_hue_hue_tester_f Complete, _xmt_hue_hue_tester_g Complete)
 - first (Hue)->Color : Non Boolean (_xmt_hue_first_selector_g Complete)
 - second (Hue)->Color : Non Boolean (_xmt_hue_second_selector_g Complete)
 - dim (Hue)->Bool : Boolean (_xmt_dim_TU Complete, _xmt_dim_UF Complete, _xmt_dim_G Complete)
Groundings:
===  x ======================================
 -- Join(0)
SELECT _xmt_hue.G AS x,
       _xmt_hue.G AS G
  FROM _xmt_hue
===  (dim x) ======================================
----- T ------------------------------------------------------------
-- Join(0)
SELECT _xmt_dim_TU_1.a_1 AS x,
       "true" AS G
  FROM _xmt_dim_TU AS _xmt_dim_TU_1
----- F ------------------------------------------------------------
-- Join(0)
SELECT _xmt_dim_UF_1.a_1 AS x,
       "false" AS G
  FROM _xmt_dim_UF AS _xmt_dim_UF_1
----- G ------------------------------------------------------------
-- Join(0)
SELECT _xmt_dim_G_1.a_1 AS x,
       _xmt_dim_G_1.G AS G
  FROM _xmt_dim_G AS _xmt_dim_G_1

=== (top) (exists ((x Hue)) (dim x)) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (-- Join(7)
       SELECT _xmt_dim_TU_1.a_1 AS x,
              "true" AS G
         FROM _xmt_dim_TU AS _xmt_dim_TU_1)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (SELECT NULL AS x, "false" AS G UNION ALL -- Join(7)
       SELECT _xmt_dim_TU_1.a_1 AS x,
              "true" AS G
         FROM _xmt_dim_TU AS _xmt_dim_TU_1)
----- G ------------------------------------------------------------
-- Agg (0)
SELECT or_aggregate(G) as G
 FROM (SELECT NULL AS x, "false" AS G UNION ALL -- Join(7)
       SELECT _xmt_dim_TU_1.a_1 AS x,
              "true" AS G
         FROM _xmt_dim_TU AS _xmt_dim_TU_1)

===========================================
