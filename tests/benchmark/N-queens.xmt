(set-option :backend none)

(declare-fun Val (Int) Bool)
(x-interpret-pred Val (x-range 1 3))

(declare-fun queen (Int) Int)
(assert (forall ((v Int))
            (=> (Val v)
                (Val (queen v)))))

(assert (forall ((v1 Int) (v2 Int))
            (=> (and (Val v1) (Val v2) (< v1 v2))
                (not (= (queen v1) (queen v2))))))
(assert (forall ((v1 Int) (v2 Int))
            (=> (and (Val v1) (Val v2) (< v1 v2))
                (not (= (+ (queen v1) v1) (+ (queen v2) v2))))))
(assert (forall ((v1 Int) (v2 Int))
            (=> (and (Val v1) (Val v2) (< v1 v2))
                (not (= (- (queen v1) v1) (- (queen v2) v2))))))

(x-ground debug:)
(x-debug solver groundings)
------- RESULTS ------------------
(declare-fun Val (Int) Bool)
(assert (forall ((x0 Int)) (= (Val x0) (or 
   (= x0 1)
   (= x0 2)
   (= x0 3)
))))
(declare-fun queen (Int) Int)
(assert (Val (queen 1)))
(assert (Val (queen 2)))
(assert (Val (queen 3)))
(assert (not (= (queen 1) (queen 2))))
(assert (not (= (queen 1) (queen 3))))
(assert (not (= (queen 2) (queen 3))))
(assert (not (= (+ (queen 1) 1) (+ (queen 2) 2))))
(assert (not (= (+ (queen 1) 1) (+ (queen 3) 3))))
(assert (not (= (+ (queen 2) 2) (+ (queen 3) 3))))
(assert (not (= (- (queen 1) 1) (- (queen 2) 2))))
(assert (not (= (- (queen 1) 1) (- (queen 3) 3))))
(assert (not (= (- (queen 2) 2) (- (queen 3) 3))))
Groundings:
===  v ======================================
 -- Join(0)
SELECT "v" AS v,
       "v" AS G
===  (Val v) ======================================
----- T ------------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_1.a_1 AS v,
       "true" AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_1
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       apply("Val", "v") AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       apply("Val", "v") AS G

===  (not (Val v)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       apply("not", apply("Val", "v")) AS G
----- F ------------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_1.a_1 AS v,
       "false" AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_1
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       apply("not", apply("Val", "v")) AS G

===  (queen v) ======================================
 -- Join(0)
SELECT "v" AS v,
       apply("queen", "v") AS G
===  (Val (queen v)) ======================================
----- T ------------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       apply("=",apply("queen", "v"), _xmt_interp_val_TU_4.a_1) AS if_, 
       "true" AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_4
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       apply("Val", apply("queen", "v")) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       apply("Val", apply("queen", "v")) AS G

===  (or (not (Val v)) (Val (queen v))) ======================================
----- T ------------------------------------------------------------
-- Agg (0)
SELECT v,
       or_aggregate(and_(if_, G)) as G
 FROM (-- Join(7)
       SELECT "v" AS v,
              apply("not", apply("Val", "v")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v" AS v,
              apply("=",apply("queen", "v"), _xmt_interp_val_TU_4.a_1) AS if_, 
              "true" AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_4)
 GROUP BY v
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_1.a_1 AS v,
       apply("Val", apply("queen", _xmt_interp_val_TU_1.a_1)) AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_1
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v" AS v,
       or_(apply("not", apply("Val", "v")), apply("Val", apply("queen", "v"))) AS G

=== (top) (forall ((v Int)) (or (not (Val v)) (Val (queen v)))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_1.a_1 AS v,
              apply("Val", apply("queen", _xmt_interp_val_TU_1.a_1)) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_1)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT G as G
 FROM (-- Join(7)
       SELECT _xmt_interp_val_TU_1.a_1 AS v,
              apply("Val", apply("queen", _xmt_interp_val_TU_1.a_1)) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_1)
----- G ------------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_1.a_1 AS v,
              apply("Val", apply("queen", _xmt_interp_val_TU_1.a_1)) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_1)

===  v1 ======================================
 -- Join(0)
SELECT "v1" AS v1,
       "v1" AS G
===  (Val v1) ======================================
----- T ------------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_8.a_1 AS v1,
       "true" AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       apply("Val", "v1") AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       apply("Val", "v1") AS G

===  (not (Val v1)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       apply("not", apply("Val", "v1")) AS G
----- F ------------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_8.a_1 AS v1,
       "false" AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       apply("not", apply("Val", "v1")) AS G

===  v2 ======================================
 -- Join(0)
SELECT "v2" AS v2,
       "v2" AS G
===  (Val v2) ======================================
----- T ------------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_11.a_1 AS v2,
       "true" AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_11
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v2" AS v2,
       apply("Val", "v2") AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v2" AS v2,
       apply("Val", "v2") AS G

===  (not (Val v2)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v2" AS v2,
       apply("not", apply("Val", "v2")) AS G
----- F ------------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_11.a_1 AS v2,
       "false" AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_11
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v2" AS v2,
       apply("not", apply("Val", "v2")) AS G

===  (< v1 v2) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("<", "v1", "v2") AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("<", "v1", "v2") AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("<", "v1", "v2") AS G

===  (not (< v1 v2)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("<", "v1", "v2")) AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("<", "v1", "v2")) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("<", "v1", "v2")) AS G

===  (queen v1) ======================================
 -- Join(0)
SELECT "v1" AS v1,
       apply("queen", "v1") AS G
===  (queen v2) ======================================
 -- Join(0)
SELECT "v2" AS v2,
       apply("queen", "v2") AS G
===  (= (queen v1) (queen v2)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("queen", "v1"), apply("queen", "v2")) AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("queen", "v1"), apply("queen", "v2")) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("queen", "v1"), apply("queen", "v2")) AS G

===  (not (= (queen v1) (queen v2))) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("queen", "v1"), apply("queen", "v2"))) AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("queen", "v1"), apply("queen", "v2"))) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("queen", "v1"), apply("queen", "v2"))) AS G

===  (or (not (Val v1)) (not (Val v2)) (not (< v1 v2)) (not (= (queen v1) (queen v2)))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT v1, v2,
       or_aggregate(G) as G
 FROM (-- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("Val", "v1")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("Val", "v2")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("<", "v1", "v2")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("=", apply("queen", "v1"), apply("queen", "v2"))) AS G)
 GROUP BY v1, v2
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_8.a_1 AS v1,
       _xmt_interp_val_TU_11.a_1 AS v2,
       or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("queen", _xmt_interp_val_TU_8.a_1), apply("queen", _xmt_interp_val_TU_11.a_1)))) AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
  JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       or_(apply("not", apply("Val", "v1")), apply("not", apply("Val", "v2")), apply("not", apply("<", "v1", "v2")), apply("not", apply("=", apply("queen", "v1"), apply("queen", "v2")))) AS G

=== (top) (forall ((v1 Int) (v2 Int)) (or (not (Val v1)) (not (Val v2)) (not (< v1 v2)) (not (= (queen v1) (queen v2))))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v1, NULL AS v2, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("queen", _xmt_interp_val_TU_8.a_1), apply("queen", _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT G as G
 FROM (-- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("queen", _xmt_interp_val_TU_8.a_1), apply("queen", _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)
----- G ------------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v1, NULL AS v2, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("queen", _xmt_interp_val_TU_8.a_1), apply("queen", _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)

===  (+ (queen v1) v1) ======================================
 -- Join(0)
SELECT "v1" AS v1,
       apply("+", apply("queen", "v1"), "v1") AS G
===  (+ (queen v2) v2) ======================================
 -- Join(0)
SELECT "v2" AS v2,
       apply("+", apply("queen", "v2"), "v2") AS G
===  (= (+ (queen v1) v1) (+ (queen v2) v2)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2")) AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2")) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2")) AS G

===  (not (= (+ (queen v1) v1) (+ (queen v2) v2))) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2"))) AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2"))) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2"))) AS G

===  (or (not (Val v1)) (not (Val v2)) (not (< v1 v2)) (not (= (+ (queen v1) v1) (+ (queen v2) v2)))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT v1, v2,
       or_aggregate(G) as G
 FROM (-- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("Val", "v1")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("Val", "v2")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("<", "v1", "v2")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2"))) AS G)
 GROUP BY v1, v2
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_8.a_1 AS v1,
       _xmt_interp_val_TU_11.a_1 AS v2,
       or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("+", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("+", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
  JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       or_(apply("not", apply("Val", "v1")), apply("not", apply("Val", "v2")), apply("not", apply("<", "v1", "v2")), apply("not", apply("=", apply("+", apply("queen", "v1"), "v1"), apply("+", apply("queen", "v2"), "v2")))) AS G

=== (top) (forall ((v1 Int) (v2 Int)) (or (not (Val v1)) (not (Val v2)) (not (< v1 v2)) (not (= (+ (queen v1) v1) (+ (queen v2) v2))))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v1, NULL AS v2, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("+", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("+", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT G as G
 FROM (-- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("+", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("+", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)
----- G ------------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v1, NULL AS v2, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("+", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("+", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)

===  (- (queen v1) v1) ======================================
 -- Join(0)
SELECT "v1" AS v1,
       apply("-", apply("queen", "v1"), "v1") AS G
===  (- (queen v2) v2) ======================================
 -- Join(0)
SELECT "v2" AS v2,
       apply("-", apply("queen", "v2"), "v2") AS G
===  (= (- (queen v1) v1) (- (queen v2) v2)) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2")) AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2")) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2")) AS G

===  (not (= (- (queen v1) v1) (- (queen v2) v2))) ======================================
----- TU -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2"))) AS G
----- UF -----------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2"))) AS G
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       apply("not", apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2"))) AS G

===  (or (not (Val v1)) (not (Val v2)) (not (< v1 v2)) (not (= (- (queen v1) v1) (- (queen v2) v2)))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT v1, v2,
       or_aggregate(G) as G
 FROM (-- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("Val", "v1")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("Val", "v2")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("<", "v1", "v2")) AS G
       UNION ALL
       -- Join(7)
       SELECT "v1" AS v1,
              "v2" AS v2,
              apply("not", apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2"))) AS G)
 GROUP BY v1, v2
----- UF -----------------------------------------------------------
-- Join(0)
SELECT _xmt_interp_val_TU_8.a_1 AS v1,
       _xmt_interp_val_TU_11.a_1 AS v2,
       or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("-", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("-", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
  FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
  JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11
----- G ------------------------------------------------------------
-- Join(0)
SELECT "v1" AS v1,
       "v2" AS v2,
       or_(apply("not", apply("Val", "v1")), apply("not", apply("Val", "v2")), apply("not", apply("<", "v1", "v2")), apply("not", apply("=", apply("-", apply("queen", "v1"), "v1"), apply("-", apply("queen", "v2"), "v2")))) AS G

=== (top) (forall ((v1 Int) (v2 Int)) (or (not (Val v1)) (not (Val v2)) (not (< v1 v2)) (not (= (- (queen v1) v1) (- (queen v2) v2))))) ======================================
----- TU -----------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v1, NULL AS v2, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("-", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("-", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)
----- UF -----------------------------------------------------------
-- Agg (0)
SELECT G as G
 FROM (-- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("-", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("-", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)
----- G ------------------------------------------------------------
-- Agg (0)
SELECT and_aggregate(G) as G
 FROM (SELECT NULL AS v1, NULL AS v2, "true" AS G 
       UNION ALL
       -- Join(7)
       SELECT _xmt_interp_val_TU_8.a_1 AS v1,
              _xmt_interp_val_TU_11.a_1 AS v2,
              or_(not_(compare_("<", _xmt_interp_val_TU_8.a_1, _xmt_interp_val_TU_11.a_1)), apply("not", apply("=", apply("-", apply("queen", _xmt_interp_val_TU_8.a_1), _xmt_interp_val_TU_8.a_1), apply("-", apply("queen", _xmt_interp_val_TU_11.a_1), _xmt_interp_val_TU_11.a_1)))) AS G
         FROM _xmt_interp_val_TU AS _xmt_interp_val_TU_8
         JOIN _xmt_interp_val_TU AS _xmt_interp_val_TU_11)

===========================================
